error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-msrv/transmute-ref-dst-unsized.rs:17:28
   |
17 | const DST_UNSIZED: &[u8] = transmute_ref!(&[0u8; 1]);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `AssertIsFromBytes`
  --> tests/ui-msrv/transmute-ref-dst-unsized.rs:17:28
   |
17 | const DST_UNSIZED: &[u8] = transmute_ref!(&[0u8; 1]);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `AssertIsFromBytes`
   = note: this error originates in the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-msrv/transmute-ref-dst-unsized.rs:17:28
   |
17 | const DST_UNSIZED: &[u8] = transmute_ref!(&[0u8; 1]);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
   = note: all local variables must have a statically known size
   = help: unsized locals are gated as an unstable feature
   = note: this error originates in the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-msrv/transmute-ref-dst-unsized.rs:17:28
   |
17 | const DST_UNSIZED: &[u8] = transmute_ref!(&[0u8; 1]);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `MaxAlignsOf`
  --> src/macro_util.rs
   |
   | pub union MaxAlignsOf<T, U> {
   |                          ^ required by this bound in `MaxAlignsOf`
   = note: this error originates in the macro `$crate::assert_align_gt_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-msrv/transmute-ref-dst-unsized.rs:17:28
   |
17 | const DST_UNSIZED: &[u8] = transmute_ref!(&[0u8; 1]);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `transmute`
  --> $RUST/core/src/intrinsics.rs
   |
   |     pub fn transmute<T, U>(e: T) -> U;
   |                         ^ required by this bound in `transmute`
   = note: this error originates in the macro `$crate::assert_size_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-msrv/transmute-ref-dst-unsized.rs:17:28
   |
17 | const DST_UNSIZED: &[u8] = transmute_ref!(&[0u8; 1]);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `MaxAlignsOf::<T, U>::new`
  --> src/macro_util.rs
   |
   | impl<T, U> MaxAlignsOf<T, U> {
   |         ^ required by this bound in `MaxAlignsOf::<T, U>::new`
   = note: this error originates in the macro `$crate::assert_align_gt_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-msrv/transmute-ref-dst-unsized.rs:17:28
   |
17 | const DST_UNSIZED: &[u8] = transmute_ref!(&[0u8; 1]);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `MaxAlignsOf`
  --> src/macro_util.rs
   |
   | pub union MaxAlignsOf<T, U> {
   |                          ^ required by this bound in `MaxAlignsOf`
   = note: this error originates in the macro `$crate::assert_align_gt_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-msrv/transmute-ref-dst-unsized.rs:17:28
   |
17 | const DST_UNSIZED: &[u8] = transmute_ref!(&[0u8; 1]);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `transmute_ref`
  --> src/macro_util.rs
   |
   | pub const unsafe fn transmute_ref<'dst, 'src: 'dst, Src: 'src, Dst: 'dst>(
   |                                                                ^^^ required by this bound in `transmute_ref`
   = note: this error originates in the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)
