error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-nightly/transmute-ref-src-unsized.rs:16:31
   |
16 | const SRC_UNSIZED: &[u8; 1] = transmute_ref!(&[0u8][..]);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                               |
   |                               doesn't have a size known at compile-time
   |                               required by a bound introduced by this call
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `AssertIsAsBytes`
  --> tests/ui-nightly/transmute-ref-src-unsized.rs:16:31
   |
16 | const SRC_UNSIZED: &[u8; 1] = transmute_ref!(&[0u8][..]);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `AssertIsAsBytes`
   = note: this error originates in the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-nightly/transmute-ref-src-unsized.rs:16:31
   |
16 | const SRC_UNSIZED: &[u8; 1] = transmute_ref!(&[0u8][..]);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `AssertIsAsBytes`
  --> tests/ui-nightly/transmute-ref-src-unsized.rs:16:31
   |
16 | const SRC_UNSIZED: &[u8; 1] = transmute_ref!(&[0u8][..]);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `AssertIsAsBytes`
   = note: this error originates in the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-nightly/transmute-ref-src-unsized.rs:16:31
   |
16 | const SRC_UNSIZED: &[u8; 1] = transmute_ref!(&[0u8][..]);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
   = note: all local variables must have a statically known size
   = help: unsized locals are gated as an unstable feature
   = note: this error originates in the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-nightly/transmute-ref-src-unsized.rs:16:31
   |
16 | const SRC_UNSIZED: &[u8; 1] = transmute_ref!(&[0u8][..]);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `AlignOf::<T>::into_t`
  --> src/macro_util.rs
   |
   | impl<T> AlignOf<T> {
   |      ^ required by this bound in `AlignOf::<T>::into_t`
   |     #[inline(never)] // Make `missing_inline_in_public_items` happy.
   |     pub fn into_t(self) -> T {
   |            ------ required by a bound in this associated function
   = note: this error originates in the macro `$crate::assert_align_gt_eq` which comes from the expansion of the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-nightly/transmute-ref-src-unsized.rs:16:31
   |
16 | const SRC_UNSIZED: &[u8; 1] = transmute_ref!(&[0u8][..]);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
   = note: the left-hand-side of an assignment must have a statically known size
   = note: this error originates in the macro `$crate::assert_align_gt_eq` which comes from the expansion of the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-nightly/transmute-ref-src-unsized.rs:16:31
   |
16 | const SRC_UNSIZED: &[u8; 1] = transmute_ref!(&[0u8][..]);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `AlignOf`
  --> src/macro_util.rs
   |
   | pub struct AlignOf<T> {
   |                    ^ required by this bound in `AlignOf`
   = note: this error originates in the macro `$crate::assert_align_gt_eq` which comes from the expansion of the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-nightly/transmute-ref-src-unsized.rs:16:31
   |
16 | const SRC_UNSIZED: &[u8; 1] = transmute_ref!(&[0u8][..]);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `MaxAlignsOf`
  --> src/macro_util.rs
   |
   | pub union MaxAlignsOf<T, U> {
   |                       ^ required by this bound in `MaxAlignsOf`
   = note: this error originates in the macro `$crate::assert_align_gt_eq` which comes from the expansion of the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-nightly/transmute-ref-src-unsized.rs:16:31
   |
16 | const SRC_UNSIZED: &[u8; 1] = transmute_ref!(&[0u8][..]);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `AlignOf`
  --> src/macro_util.rs
   |
   | pub struct AlignOf<T> {
   |                    ^ required by this bound in `AlignOf`
   = note: this error originates in the macro `$crate::assert_align_gt_eq` which comes from the expansion of the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-nightly/transmute-ref-src-unsized.rs:16:31
   |
16 | const SRC_UNSIZED: &[u8; 1] = transmute_ref!(&[0u8][..]);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                               |
   |                               doesn't have a size known at compile-time
   |                               required by a bound introduced by this call
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `transmute_ref`
  --> src/macro_util.rs
   |
   | pub const unsafe fn transmute_ref<'dst, 'src: 'dst, Src: 'src, Dst: 'dst>(
   |                                                     ^^^ required by this bound in `transmute_ref`
   = note: this error originates in the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)
