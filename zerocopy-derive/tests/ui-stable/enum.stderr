error: unrecognized representation hint
  --> tests/ui-stable/enum.rs:19:8
   |
19 | #[repr("foo")]
   |        ^^^^^

error: unrecognized representation hint
  --> tests/ui-stable/enum.rs:25:8
   |
25 | #[repr(foo)]
   |        ^^^

error: unsupported representation for deriving zerocopy trait(s) on an enum
  --> tests/ui-stable/enum.rs:31:8
   |
31 | #[repr(transparent)]
   |        ^^^^^^^^^^^

error: conflicting representation hints
  --> tests/ui-stable/enum.rs:37:1
   |
37 | #[repr(u8, u16)]
   | ^

error: must have a non-align #[repr(...)] attribute in order to guarantee this type's memory layout
  --> tests/ui-stable/enum.rs:42:10
   |
42 | #[derive(TryFromBytes, FromZeros, FromBytes)]
   |          ^^^^^^^^^^^^
   |
   = note: this error originates in the derive macro `TryFromBytes` (in Nightly builds, run with -Z macro-backtrace for more info)

error: must have a non-align #[repr(...)] attribute in order to guarantee this type's memory layout
  --> tests/ui-stable/enum.rs:42:24
   |
42 | #[derive(TryFromBytes, FromZeros, FromBytes)]
   |                        ^^^^^^^^^
   |
   = note: this error originates in the derive macro `FromZeros` (in Nightly builds, run with -Z macro-backtrace for more info)

error: must have a non-align #[repr(...)] attribute in order to guarantee this type's memory layout
  --> tests/ui-stable/enum.rs:42:35
   |
42 | #[derive(TryFromBytes, FromZeros, FromBytes)]
   |                                   ^^^^^^^^^
   |
   = note: this error originates in the derive macro `FromBytes` (in Nightly builds, run with -Z macro-backtrace for more info)

error: must have a non-align #[repr(...)] attribute in order to guarantee this type's memory layout
  --> tests/ui-stable/enum.rs:69:10
   |
69 | #[derive(TryFromBytes)]
   |          ^^^^^^^^^^^^
   |
   = note: this error originates in the derive macro `TryFromBytes` (in Nightly builds, run with -Z macro-backtrace for more info)

error: only field-less enums can implement TryFromBytes
  --> tests/ui-stable/enum.rs:75:1
   |
75 | / #[repr(u8)]
76 | | enum TryFromBytes2 {
77 | |     A(u8),
78 | | }
   | |_^

error: only field-less enums can implement TryFromBytes
  --> tests/ui-stable/enum.rs:85:1
   |
85 | / enum FromZeros1 {
86 | |     A(u8),
87 | | }
   | |_^

error: only field-less enums can implement FromZeros
  --> tests/ui-stable/enum.rs:85:1
   |
85 | / enum FromZeros1 {
86 | |     A(u8),
87 | | }
   | |_^

error: only field-less enums can implement TryFromBytes
  --> tests/ui-stable/enum.rs:90:1
   |
90 | / enum FromZeros2 {
91 | |     A,
92 | |     B(u8),
93 | | }
   | |_^

error: only field-less enums can implement FromZeros
  --> tests/ui-stable/enum.rs:90:1
   |
90 | / enum FromZeros2 {
91 | |     A,
92 | |     B(u8),
93 | | }
   | |_^

error: must have a non-align #[repr(...)] attribute in order to guarantee this type's memory layout
  --> tests/ui-stable/enum.rs:95:10
   |
95 | #[derive(TryFromBytes, FromZeros)]
   |          ^^^^^^^^^^^^
   |
   = note: this error originates in the derive macro `TryFromBytes` (in Nightly builds, run with -Z macro-backtrace for more info)

error: must have a non-align #[repr(...)] attribute in order to guarantee this type's memory layout
  --> tests/ui-stable/enum.rs:95:24
   |
95 | #[derive(TryFromBytes, FromZeros)]
   |                        ^^^^^^^^^
   |
   = note: this error originates in the derive macro `FromZeros` (in Nightly builds, run with -Z macro-backtrace for more info)

error: FromBytes requires repr of "u8", "u16", "i8", or "i16"
   --> tests/ui-stable/enum.rs:106:8
    |
106 | #[repr(C)]
    |        ^

error: FromBytes requires repr of "u8", "u16", "i8", or "i16"
   --> tests/ui-stable/enum.rs:112:8
    |
112 | #[repr(usize)]
    |        ^^^^^

error: FromBytes requires repr of "u8", "u16", "i8", or "i16"
   --> tests/ui-stable/enum.rs:118:8
    |
118 | #[repr(isize)]
    |        ^^^^^

error: FromBytes requires repr of "u8", "u16", "i8", or "i16"
   --> tests/ui-stable/enum.rs:124:8
    |
124 | #[repr(u32)]
    |        ^^^

error: FromBytes requires repr of "u8", "u16", "i8", or "i16"
   --> tests/ui-stable/enum.rs:130:8
    |
130 | #[repr(i32)]
    |        ^^^

error: FromBytes requires repr of "u8", "u16", "i8", or "i16"
   --> tests/ui-stable/enum.rs:136:8
    |
136 | #[repr(u64)]
    |        ^^^

error: FromBytes requires repr of "u8", "u16", "i8", or "i16"
   --> tests/ui-stable/enum.rs:142:8
    |
142 | #[repr(i64)]
    |        ^^^

error: Unaligned requires repr of "u8" or "i8", and no alignment (i.e., repr(align(N > 1)))
   --> tests/ui-stable/enum.rs:152:8
    |
152 | #[repr(C)]
    |        ^

error: Unaligned requires repr of "u8" or "i8", and no alignment (i.e., repr(align(N > 1)))
   --> tests/ui-stable/enum.rs:158:8
    |
158 | #[repr(u16)]
    |        ^^^

error: Unaligned requires repr of "u8" or "i8", and no alignment (i.e., repr(align(N > 1)))
   --> tests/ui-stable/enum.rs:164:8
    |
164 | #[repr(i16)]
    |        ^^^

error: Unaligned requires repr of "u8" or "i8", and no alignment (i.e., repr(align(N > 1)))
   --> tests/ui-stable/enum.rs:170:8
    |
170 | #[repr(u32)]
    |        ^^^

error: Unaligned requires repr of "u8" or "i8", and no alignment (i.e., repr(align(N > 1)))
   --> tests/ui-stable/enum.rs:176:8
    |
176 | #[repr(i32)]
    |        ^^^

error: Unaligned requires repr of "u8" or "i8", and no alignment (i.e., repr(align(N > 1)))
   --> tests/ui-stable/enum.rs:182:8
    |
182 | #[repr(u64)]
    |        ^^^

error: Unaligned requires repr of "u8" or "i8", and no alignment (i.e., repr(align(N > 1)))
   --> tests/ui-stable/enum.rs:188:8
    |
188 | #[repr(i64)]
    |        ^^^

error: Unaligned requires repr of "u8" or "i8", and no alignment (i.e., repr(align(N > 1)))
   --> tests/ui-stable/enum.rs:194:8
    |
194 | #[repr(usize)]
    |        ^^^^^

error: Unaligned requires repr of "u8" or "i8", and no alignment (i.e., repr(align(N > 1)))
   --> tests/ui-stable/enum.rs:200:8
    |
200 | #[repr(isize)]
    |        ^^^^^

error: cannot derive Unaligned with repr(align(N > 1))
   --> tests/ui-stable/enum.rs:206:12
    |
206 | #[repr(u8, align(2))]
    |            ^^^^^^^^

error: cannot derive Unaligned with repr(align(N > 1))
   --> tests/ui-stable/enum.rs:212:12
    |
212 | #[repr(i8, align(2))]
    |            ^^^^^^^^

error: cannot derive Unaligned with repr(align(N > 1))
   --> tests/ui-stable/enum.rs:218:18
    |
218 | #[repr(align(1), align(2))]
    |                  ^^^^^^^^

error: cannot derive Unaligned with repr(align(N > 1))
   --> tests/ui-stable/enum.rs:224:8
    |
224 | #[repr(align(2), align(4))]
    |        ^^^^^^^^

error[E0565]: meta item in `repr` must be an identifier
  --> tests/ui-stable/enum.rs:19:8
   |
19 | #[repr("foo")]
   |        ^^^^^

error[E0552]: unrecognized representation hint
  --> tests/ui-stable/enum.rs:25:8
   |
25 | #[repr(foo)]
   |        ^^^
   |
   = help: valid reprs are `Rust` (default), `C`, `align`, `packed`, `transparent`, `simd`, `i8`, `u8`, `i16`, `u16`, `i32`, `u32`, `i64`, `u64`, `i128`, `u128`, `isize`, `usize`

error[E0566]: conflicting representation hints
  --> tests/ui-stable/enum.rs:37:8
   |
37 | #[repr(u8, u16)]
   |        ^^  ^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #68585 <https://github.com/rust-lang/rust/issues/68585>
   = note: `#[deny(conflicting_repr_hints)]` on by default

error[E0277]: the trait bound `UnsafeCell<()>: NoCell` is not satisfied
  --> tests/ui-stable/enum.rs:51:10
   |
51 | #[derive(NoCell)]
   |          ^^^^^^ the trait `NoCell` is not implemented for `UnsafeCell<()>`
   |
   = help: the following other types implement trait `NoCell`:
             bool
             char
             isize
             i8
             i16
             i32
             i64
             i128
           and $N others
   = help: see issue #48214
   = note: this error originates in the derive macro `NoCell` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `UnsafeCell<u8>: NoCell` is not satisfied
  --> tests/ui-stable/enum.rs:59:10
   |
59 | #[derive(NoCell)]
   |          ^^^^^^ the trait `NoCell` is not implemented for `UnsafeCell<u8>`
   |
   = help: the following other types implement trait `NoCell`:
             bool
             char
             isize
             i8
             i16
             i32
             i64
             i128
           and $N others
   = help: see issue #48214
   = note: this error originates in the derive macro `NoCell` (in Nightly builds, run with -Z macro-backtrace for more info)
