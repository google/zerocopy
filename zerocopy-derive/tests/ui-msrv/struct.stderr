error: cannot derive Unaligned with repr(align(N > 1))
  --> tests/ui-msrv/struct.rs:86:11
   |
86 | #[repr(C, align(2))]
   |           ^^^^^^^^

error: cannot derive Unaligned with repr(align(N > 1))
  --> tests/ui-msrv/struct.rs:90:21
   |
90 | #[repr(transparent, align(2))]
   |                     ^^^^^^^^

error: cannot derive Unaligned with repr(align(N > 1))
  --> tests/ui-msrv/struct.rs:96:16
   |
96 | #[repr(packed, align(2))]
   |                ^^^^^^^^

error: cannot derive Unaligned with repr(align(N > 1))
   --> tests/ui-msrv/struct.rs:100:18
    |
100 | #[repr(align(1), align(2))]
    |                  ^^^^^^^^

error: cannot derive Unaligned with repr(align(N > 1))
   --> tests/ui-msrv/struct.rs:104:8
    |
104 | #[repr(align(2), align(4))]
    |        ^^^^^^^^

error[E0692]: transparent struct cannot have other repr hints
  --> tests/ui-msrv/struct.rs:90:8
   |
90 | #[repr(transparent, align(2))]
   |        ^^^^^^^^^^^  ^^^^^^^^

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-msrv/struct.rs:31:10
   |
31 | #[derive(KnownLayout)]
   |          ^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: within `KL00`, the trait `Sized` is not implemented for `[u8]`
note: required because it appears within the type `KL00`
  --> tests/ui-msrv/struct.rs:32:8
   |
32 | struct KL00(u8, NotKnownLayoutDst);
   |        ^^^^
   = help: see issue #48214
   = note: this error originates in the derive macro `KnownLayout` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-msrv/struct.rs:36:10
   |
36 | #[derive(KnownLayout)]
   |          ^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: within `KL02`, the trait `Sized` is not implemented for `[u8]`
note: required because it appears within the type `KL02`
  --> tests/ui-msrv/struct.rs:37:8
   |
37 | struct KL02(u8, [u8]);
   |        ^^^^
   = help: see issue #48214
   = note: this error originates in the derive macro `KnownLayout` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `NotKnownLayoutDst: KnownLayout` is not satisfied
  --> tests/ui-msrv/struct.rs:41:10
   |
41 | #[derive(KnownLayout)]
   |          ^^^^^^^^^^^ the trait `KnownLayout` is not implemented for `NotKnownLayoutDst`
   |
   = help: see issue #48214
   = note: this error originates in the derive macro `KnownLayout` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `NotKnownLayout: KnownLayout` is not satisfied
  --> tests/ui-msrv/struct.rs:47:10
   |
47 | #[derive(KnownLayout)]
   |          ^^^^^^^^^^^ the trait `KnownLayout` is not implemented for `NotKnownLayout`
   |
   = help: see issue #48214
   = note: this error originates in the derive macro `KnownLayout` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `AU16: Unaligned` is not satisfied
  --> tests/ui-msrv/struct.rs:58:10
   |
58 | #[derive(AsBytes)]
   |          ^^^^^^^ the trait `Unaligned` is not implemented for `AU16`
   |
   = help: see issue #48214
   = note: this error originates in the derive macro `AsBytes` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `HasPadding<AsBytes2, true>: ShouldBe<false>` is not satisfied
  --> tests/ui-msrv/struct.rs:65:10
   |
65 | #[derive(AsBytes)]
   |          ^^^^^^^ the trait `ShouldBe<false>` is not implemented for `HasPadding<AsBytes2, true>`
   |
   = help: the following implementations were found:
             <HasPadding<T, VALUE> as ShouldBe<VALUE>>
   = help: see issue #48214
   = note: this error originates in the derive macro `AsBytes` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `HasPadding<AsBytes3, true>: ShouldBe<false>` is not satisfied
  --> tests/ui-msrv/struct.rs:72:10
   |
72 | #[derive(AsBytes)]
   |          ^^^^^^^ the trait `ShouldBe<false>` is not implemented for `HasPadding<AsBytes3, true>`
   |
   = help: the following implementations were found:
             <HasPadding<T, VALUE> as ShouldBe<VALUE>>
   = help: see issue #48214
   = note: this error originates in the derive macro `AsBytes` (in Nightly builds, run with -Z macro-backtrace for more info)
