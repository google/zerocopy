error: cannot derive TryFromBytes with repr(packed)
  --> tests/ui-msrv/struct.rs:70:8
   |
70 | #[repr(packed)]
   |        ^^^^^^

error: cannot derive TryFromBytes with repr(packed)
  --> tests/ui-msrv/struct.rs:76:8
   |
76 | #[repr(packed(1))]
   |        ^^^^^^^^^

error: cannot derive TryFromBytes with repr(packed)
  --> tests/ui-msrv/struct.rs:82:11
   |
82 | #[repr(C, packed)]
   |           ^^^^^^

error: cannot derive TryFromBytes with repr(packed)
  --> tests/ui-msrv/struct.rs:88:11
   |
88 | #[repr(C, packed(1))]
   |           ^^^^^^^^^

error: unsupported on generic structs that are not repr(transparent) or repr(packed)
  --> tests/ui-msrv/struct.rs:97:10
   |
97 | #[derive(AsBytes)]
   |          ^^^^^^^
   |
   = note: this error originates in the derive macro `AsBytes` (in Nightly builds, run with -Z macro-backtrace for more info)

error: cannot derive Unaligned with repr(align(N > 1))
   --> tests/ui-msrv/struct.rs:122:11
    |
122 | #[repr(C, align(2))]
    |           ^^^^^^^^

error: cannot derive Unaligned with repr(align(N > 1))
   --> tests/ui-msrv/struct.rs:126:21
    |
126 | #[repr(transparent, align(2))]
    |                     ^^^^^^^^

error: cannot derive Unaligned with repr(align(N > 1))
   --> tests/ui-msrv/struct.rs:132:16
    |
132 | #[repr(packed, align(2))]
    |                ^^^^^^^^

error: cannot derive Unaligned with repr(align(N > 1))
   --> tests/ui-msrv/struct.rs:136:18
    |
136 | #[repr(align(1), align(2))]
    |                  ^^^^^^^^

error: cannot derive Unaligned with repr(align(N > 1))
   --> tests/ui-msrv/struct.rs:140:8
    |
140 | #[repr(align(2), align(4))]
    |        ^^^^^^^^

error[E0692]: transparent struct cannot have other repr hints
   --> tests/ui-msrv/struct.rs:126:8
    |
126 | #[repr(transparent, align(2))]
    |        ^^^^^^^^^^^  ^^^^^^^^

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-msrv/struct.rs:31:10
   |
31 | #[derive(KnownLayout)]
   |          ^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: within `KL00`, the trait `Sized` is not implemented for `[u8]`
note: required because it appears within the type `KL00`
  --> tests/ui-msrv/struct.rs:32:8
   |
32 | struct KL00(u8, NotKnownLayoutDst);
   |        ^^^^
   = help: see issue #48214
   = note: this error originates in the derive macro `KnownLayout` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-msrv/struct.rs:36:10
   |
36 | #[derive(KnownLayout)]
   |          ^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: within `KL02`, the trait `Sized` is not implemented for `[u8]`
note: required because it appears within the type `KL02`
  --> tests/ui-msrv/struct.rs:37:8
   |
37 | struct KL02(u8, [u8]);
   |        ^^^^
   = help: see issue #48214
   = note: this error originates in the derive macro `KnownLayout` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `NotKnownLayoutDst: KnownLayout` is not satisfied
  --> tests/ui-msrv/struct.rs:41:10
   |
41 | #[derive(KnownLayout)]
   |          ^^^^^^^^^^^ the trait `KnownLayout` is not implemented for `NotKnownLayoutDst`
   |
   = help: see issue #48214
   = note: this error originates in the derive macro `KnownLayout` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `NotKnownLayout: KnownLayout` is not satisfied
  --> tests/ui-msrv/struct.rs:47:10
   |
47 | #[derive(KnownLayout)]
   |          ^^^^^^^^^^^ the trait `KnownLayout` is not implemented for `NotKnownLayout`
   |
   = help: see issue #48214
   = note: this error originates in the derive macro `KnownLayout` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `UnsafeCell<()>: NoCell` is not satisfied
  --> tests/ui-msrv/struct.rs:55:10
   |
55 | #[derive(NoCell)]
   |          ^^^^^^ the trait `NoCell` is not implemented for `UnsafeCell<()>`
   |
   = help: see issue #48214
   = note: this error originates in the derive macro `NoCell` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `UnsafeCell<u8>: NoCell` is not satisfied
  --> tests/ui-msrv/struct.rs:60:10
   |
60 | #[derive(NoCell)]
   |          ^^^^^^ the trait `NoCell` is not implemented for `UnsafeCell<u8>`
   |
   = note: required because of the requirements on the impl of `NoCell` for `[UnsafeCell<u8>; 0]`
   = help: see issue #48214
   = note: this error originates in the derive macro `NoCell` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `HasPadding<AsBytes2, true>: ShouldBe<false>` is not satisfied
   --> tests/ui-msrv/struct.rs:101:10
    |
101 | #[derive(AsBytes)]
    |          ^^^^^^^ the trait `ShouldBe<false>` is not implemented for `HasPadding<AsBytes2, true>`
    |
    = help: the following implementations were found:
              <HasPadding<T, VALUE> as ShouldBe<VALUE>>
    = help: see issue #48214
    = note: this error originates in the derive macro `AsBytes` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `HasPadding<AsBytes3, true>: ShouldBe<false>` is not satisfied
   --> tests/ui-msrv/struct.rs:108:10
    |
108 | #[derive(AsBytes)]
    |          ^^^^^^^ the trait `ShouldBe<false>` is not implemented for `HasPadding<AsBytes3, true>`
    |
    = help: the following implementations were found:
              <HasPadding<T, VALUE> as ShouldBe<VALUE>>
    = help: see issue #48214
    = note: this error originates in the derive macro `AsBytes` (in Nightly builds, run with -Z macro-backtrace for more info)
