<<<<<<< HEAD
error[E0277]: the trait bound `NotZerocopy: FromZeroes` is not satisfied
  --> tests/ui-nightly/derive_transparent.rs:37:18
   |
37 | assert_impl_all!(TransparentStruct<NotZerocopy>: FromZeros);
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `FromZeroes` is not implemented for `NotZerocopy`
   |
   = help: the following other types implement trait `FromZeroes`:
             bool
             char
             isize
             i8
             i16
             i32
             i64
             i128
           and $N others
note: required for `TransparentStruct<NotZerocopy>` to implement `FromZeroes`
  --> tests/ui-nightly/derive_transparent.rs:27:19
   |
27 | #[derive(AsBytes, FromZeros, FromBytes, Unaligned)]
   |                   ^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
note: required by a bound in `_::{closure#0}::assert_impl_all`
  --> tests/ui-nightly/derive_transparent.rs:37:1
   |
37 | assert_impl_all!(TransparentStruct<NotZerocopy>: FromZeros);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `assert_impl_all`
   = note: this error originates in the derive macro `FromZeros` which comes from the expansion of the macro `assert_impl_all` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `NotZerocopy: FromBytes` is not satisfied
  --> tests/ui-nightly/derive_transparent.rs:38:18
=======
error: cannot find derive macro `TryFromBytes` in this scope
  --> tests/ui-nightly/derive_transparent.rs:27:19
   |
27 | #[derive(AsBytes, TryFromBytes, FromZeroes, FromBytes, Unaligned)]
   |                   ^^^^^^^^^^^^
   |
  ::: src/lib.rs
>>>>>>> [derive] Support `derive(TryFromBytes)` for structs
   |
   | pub fn derive_from_bytes(ts: proc_macro::TokenStream) -> proc_macro::TokenStream {
   | -------------------------------------------------------------------------------- similarly named derive macro `FromBytes` defined here
   |
<<<<<<< HEAD
   = help: the following other types implement trait `FromBytes`:
             isize
             i8
             i16
             i32
             i64
             i128
             usize
             u8
           and $N others
note: required for `TransparentStruct<NotZerocopy>` to implement `FromBytes`
  --> tests/ui-nightly/derive_transparent.rs:27:30
   |
27 | #[derive(AsBytes, FromZeros, FromBytes, Unaligned)]
   |                              ^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
note: required by a bound in `_::{closure#0}::assert_impl_all`
  --> tests/ui-nightly/derive_transparent.rs:38:1
=======
help: a derive macro with a similar name exists
   |
27 | #[derive(AsBytes, FromBytes, FromZeroes, FromBytes, Unaligned)]
   |                   ~~~~~~~~~
help: consider importing one of these items
>>>>>>> [derive] Support `derive(TryFromBytes)` for structs
   |
14  + use zerocopy::TryFromBytes;
    |
14  + use zerocopy_derive::TryFromBytes;
    |

error[E0405]: cannot find trait `TryFromBytes` in this scope
  --> tests/ui-nightly/derive_transparent.rs:37:50
   |
37 | assert_impl_all!(TransparentStruct<NotZerocopy>: TryFromBytes);
   |                                                  ^^^^^^^^^^^^
   |
<<<<<<< HEAD
   = help: the following other types implement trait `AsBytes`:
             bool
             char
             isize
             i8
             i16
             i32
             i64
             i128
           and $N others
note: required for `TransparentStruct<NotZerocopy>` to implement `AsBytes`
  --> tests/ui-nightly/derive_transparent.rs:27:10
   |
27 | #[derive(AsBytes, FromZeros, FromBytes, Unaligned)]
   |          ^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
note: required by a bound in `_::{closure#0}::assert_impl_all`
  --> tests/ui-nightly/derive_transparent.rs:39:1
   |
39 | assert_impl_all!(TransparentStruct<NotZerocopy>: AsBytes);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `assert_impl_all`
   = note: this error originates in the derive macro `AsBytes` which comes from the expansion of the macro `assert_impl_all` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `NotZerocopy: Unaligned` is not satisfied
  --> tests/ui-nightly/derive_transparent.rs:40:18
=======
  ::: $WORKSPACE/src/lib.rs
>>>>>>> [derive] Support `derive(TryFromBytes)` for structs
   |
   | pub unsafe trait FromBytes: FromZeroes {
   | -------------------------------------- similarly named trait `FromBytes` defined here
   |
<<<<<<< HEAD
   = help: the following other types implement trait `Unaligned`:
             bool
             i8
             u8
             TransparentStruct<T>
             U16<O>
             U32<O>
             U64<O>
             U128<O>
           and $N others
note: required for `TransparentStruct<NotZerocopy>` to implement `Unaligned`
  --> tests/ui-nightly/derive_transparent.rs:27:41
   |
27 | #[derive(AsBytes, FromZeros, FromBytes, Unaligned)]
   |                                         ^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
note: required by a bound in `_::{closure#0}::assert_impl_all`
  --> tests/ui-nightly/derive_transparent.rs:40:1
=======
help: a trait with a similar name exists
   |
37 | assert_impl_all!(TransparentStruct<NotZerocopy>: FromBytes);
   |                                                  ~~~~~~~~~
help: consider importing this trait
>>>>>>> [derive] Support `derive(TryFromBytes)` for structs
   |
14   + use zerocopy::TryFromBytes;
     |
