# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# Put both crates in a single workspace so that `trybuild` compiler errors have
# paths that are stable regardless of the path to the repository root. This
# avoids issues like:
# https://github.com/dtolnay/trybuild/issues/207#issuecomment-1312277494
[workspace]

[package]
edition = "2021"
name = "zerocopy"
version = "0.7.3"
authors = ["Joshua Liebow-Feeser <joshlf@google.com>"]
description = "Utilities for zero-copy parsing and serialization"
license = "BSD-2-Clause"
repository = "https://github.com/google/zerocopy"
rust-version = "1.61.0"

exclude = [".*"]

[package.metadata.docs.rs]
all-features = true

[package.metadata.ci]
# The versions of the stable and nightly compiler toolchains to use in CI.
pinned-stable = "1.69.0"
pinned-nightly = "nightly-2023-05-25"

# Don't run doctests during `cargo test` without the `--doc` flag (the `--doc`
# flag will still cause doctests to run despite this directive). Running
# doctests without the `derive` feature fails because our doc examples make use
# of zerocopy-derive, which is an optional dependency and is disabled by
# default. Unfortunately, there's no way to automatically include
# zerocopy-derive as a dependency during doctests, so we have to do it manually
# by passing the appropriate flags in CI.
[lib]
doctest = false
# Not technically necessary - this is the default value for `path` - but if a
# `lib` section is present, then `cargo readme` expects it to have a `path`
# field, and will fail if it's missing.
path = "src/lib.rs"

[features]
default = ["byteorder"]

derive = ["zerocopy-derive"]
alloc = []
simd = []
simd-nightly = ["simd"]
# This feature depends on all other features that work on the stable compiler.
# We make no stability guarantees about this feature; it may be modified or
# removed at any time.
__internal_use_only_features_that_work_on_stable = ["alloc", "simd"]

[dependencies]
zerocopy-derive = { version = "=0.7.3", path = "zerocopy-derive", optional = true }

[dependencies.byteorder]
version = "1.3"
default-features = false
optional = true

# The "associated proc macro pattern" ensures that the versions of zerocopy and
# zerocopy-derive remain equal, even if the 'derive' feature isn't used.
# See: https://github.com/matklad/macro-dep-test
[target.'cfg(any())'.dependencies]
zerocopy-derive = { version = "=0.7.3", path = "zerocopy-derive" }

[dev-dependencies]
rand = "0.6"
rustversion = "1.0"
static_assertions = "1.1"
# Pinned to a specific version so that the version used for local development
# and the version used in CI are guaranteed to be the same. Future versions
# sometimes change the output format slightly, so a version mismatch can cause
# CI test failures.
trybuild = "=1.0.80"
# In tests, unlike in production, zerocopy-derive is not optional
zerocopy-derive = { version = "=0.7.3", path = "zerocopy-derive" }
