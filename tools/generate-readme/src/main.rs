// Copyright 2024 The Fuchsia Authors
//
// Licensed under a BSD-style license <LICENSE-BSD>, Apache License, Version 2.0
// <LICENSE-APACHE or https://www.apache.org/licenses/LICENSE-2.0>, or the MIT
// license <LICENSE-MIT or https://opensource.org/licenses/MIT>, at your option.
// This file may not be copied, modified, or distributed except according to
// those terms.

use std::process::Command;

use regex::{Captures, Regex};

const COPYRIGHT_HEADER: &str = "\
<!-- Copyright 2024 The Fuchsia Authors

Licensed under a BSD-style license <LICENSE-BSD>, Apache License, Version 2.0
<LICENSE-APACHE or https://www.apache.org/licenses/LICENSE-2.0>, or the MIT
license <LICENSE-MIT or https://opensource.org/licenses/MIT>, at your option.
This file may not be copied, modified, or distributed except according to
those terms.

WARNING: DO NOT EDIT THIS FILE. It is generated automatically. Edits should be
made in the doc comment on `src/lib.rs` or in `tools/generate-readme`.
-->\
";

const DISCLAIMER_FOOTER: &str = "\
## Disclaimer

Disclaimer: Zerocopy is not an officially supported Google product.\
";

fn main() {
    // This uses the `cargo readme` tool, which you can install via `cargo install
    // cargo-readme --version 3.2.0`.
    let output = Command::new("cargo").args(["readme", "--no-license"]).output().unwrap();

    let readme = String::from_utf8(output.stdout).unwrap();

    // This regex is used to strip code links like:
    //
    //   /// Here is a link to [`Vec`].
    //
    // These links don't work in a Markdown file, and so we remove the `[` and `]`
    // characters to convert them to non-link code snippets.
    let body = Regex::new(r"\[(`[^`]*`)\]")
        .unwrap()
        .replace_all(&readme, |caps: &Captures| caps[1].to_string());

    println!("{}\n\n{}\n{}", COPYRIGHT_HEADER, body, DISCLAIMER_FOOTER);
}
